extends ../layout

block content
    if data.hasPayees
        .row(style='margin-bottom: 24px;')
            .col-xs-6 
                a.btn.btn-primary(href='/month?dt=' + data.prevMonth, style='width: 150px;') <i class="fa fa-arrow-left"></i> Previous
            .col-xs-6
                .pull-right
                    a.btn.btn-primary(href='/month?dt=' + data.nextMonth, style='width: 150px;') Next <i class="fa fa-arrow-right"></i>
        div
            .panel.panel-primary
                .panel-heading
                    | #{moment(data.timing.startOfMonth).format('dddd, M/D/YYYY')} - #{moment(data.timing.endOfMonth).format('dddd, M/D/YYYY')}
                .panel-body
                    .row
                        .col-xs-6.col-sm-3
                            small(style='font-variant: small-caps;') Amount Due
                            h4 $#{formatCurrency(data.stats.monthlyTotal)}
                        .col-xs-6.col-sm-3
                            small(style='font-variant: small-caps;') Amount Paid
                            h4 $#{formatCurrency(data.stats.amountPaid)}
                            small #{data.stats.pctPaid.toLocaleString('en-US')}% of month
                        .col-xs-6.col-sm-3
                            small(style='font-variant: small-caps;') Amount Remaining
                            h4 $#{formatCurrency(data.stats.amountRemaining)}
                            small #{data.stats.pctRemain.toLocaleString('en-US')}% of month
                        .col-xs-6.col-sm-3
                            small(style='font-variant: small-caps;') Credit Accounts
                            h4 $#{formatCurrency(data.stats.amountCredit)}
                            small #{data.stats.pctCredit.toLocaleString('en-US')}% of month
                    .row.hidden-xs
                        .col-xs-12
                            canvas(id='myChart' height='50px')
                table.table
                    thead
                        tr
                            th(width='20%') Date
                            th Name
                            th.hidden-xs(width='10%') APR %
                            th(width='10%') Mark Paid
                    for payee in data.payees
                        tr(class=(payee.currentWeek === true) ? 'active' : undefined)
                            td 
                                if (payee.isToday)
                                    strong #{moment(payee.date).format('dddd, M/D/YYYY')}
                                else 
                                    | #{moment(payee.date).format('dddd, M/D/YYYY')}
                            td 
                                if (payee.isToday)
                                    strong #{payee.name}
                                else 
                                    | #{payee.name}
                                if (payee.url)
                                    |    
                                    a(href=payee.url target='_blank') <i class="fa fa-external-link"></i>
                                if payee.autopay
                                    | 
                                    i(class='fa fa-refresh' style='color: #4d90fc;')
                                br
                                small #{payee.description}
                            td.hidden-xs #{payee.apr ? payee.apr.toFixed(2) : ''}
                            td 
                                if payee.isPaid == false
                                    a.btn.btn-warning(style='width: 100%' href='/payee/view/' + payee.id + '?dt=' + moment(payee.date).format('YYYY-MM-DD')) #{formatCurrency(payee.amount, {format: '%s%v', code: 'USD', symbol: '$'})}
                                else
                                    a.btn.btn-success(style='width: 100%' href='/payee/view/' + payee.id) Paid
    else
        h3 You do not have any payees
        p Add some payees and lets get started!
                                
    script(src='/js/Chart.min.js')
    script.
        window.chartColors = {
            red: 'rgb(255, 99, 132)',
            orange: 'rgb(255, 159, 64)',
            yellow: 'rgb(255, 205, 86)',
            green: 'rgb(75, 192, 192)',
            blue: 'rgb(54, 162, 235)',
            purple: 'rgb(153, 102, 255)',
            grey: 'rgb(201, 203, 207)'
        };
        var ctx = document.getElementById("myChart").getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: #{JSON.stringify(data.graph.labels)},
                datasets: [
                    {
                        label: 'Actual per Day',
                        fill: true,
                        data: #{JSON.stringify(data.graph.actual)},
                        backgroundColor: "rgba(255, 99, 132, 0.5)",
                        borderColor: window.chartColors.red
                    },
                    {
                        label: 'Calculated per Day',
                        fill: true,
                        data: #{JSON.stringify(data.graph.calculated)},
                        backgroundColor: "rgba(75, 192, 192, 0.5)",
                        borderColor: window.chartColors.green
                    }
                ]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero:true
                        }
                    }]
                }
            }
        });