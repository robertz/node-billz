extends ../layout

block content
    .panel.panel-primary
        .panel-heading
            h5= data.payee.name
        .panel-body
            .row
                .col-xs-12.col-md-6
                    .row
                        .col-xs-4
                            small(style='font-variant: small-caps;') Due Date
                            h4 #{moment(data.payee.ref).format('Do')}
                        .col-xs-4
                            small(style='font-variant: small-caps;') Amount
                            h4 #{formatCurrency(data.payee.amount, {format: '%s%v', code: 'USD', symbol: '$'})}
                        .col-xs-4
                            small(style='font-variant: small-caps;') Average
                            h4 #{formatCurrency(data.avgPayment, {format: '%s%v', code: 'USD', symbol: '$'})}
                .col-xs-12.col-md-6
                    .row
                        .col-xs-12
                            .well
                                form.form-inline(method='post', action='/payee/pay/' + data.payee.id)
                                    input(type='hidden' name='_csrf' value=_csrf)
                                    input.form-control(type='date' name='ref' value=data.payDate required) 
                                    | 
                                    input.form-control(type='number' step='0.01' name='amount' value=formatCurrency(data.payee.amount) required)
                                    | 
                                    input.btn.btn-primary(type='submit' value='Submit')
            if data.payee.url.length
                .row
                    .col-xs-12
                        | Payment URL (
                        a(href=data.payee.url, target='_blank') LINK
                        | ) 
            if data.payee.apr
                .row
                    .col-xs-12
                        h6 APR %:
                        p #{data.payee.apr.toFixed(2)}
            if data.payee.autopay
                .row
                    .col-xs-12
                        h6 Autopay Enabled
            .row
                .col-xs-12
                    h6 Description:
                    p #{data.payee.description}
            .row 
                .col-xs-12
                    a(class='btn btn-primary' href='/payee') Payees 
                    | 
                    a(class='btn btn-warning' href='/forecast') Forecast 
                    | 
                    a(class='btn btn-success' href='/payee/edit/' + data.payee.id) Edit
    if (data.payments.length)
        if data.payments.length > 2
            .panel.panel-primary.hidden-xs
                .panel-heading
                    h5 History at a Glance
                .panel-body
                    .col-xs-12
                        canvas(id='myChart' height='50px')
        .panel.panel-primary
            .panel-heading
                h5 Payment History
            table.table.table-striped
                thead
                    tr
                        th Payee
                        th Due Date
                        th Paid Date
                        th Amount
                for payment in data.payments
                    tr
                        td #{data.payee.name}
                        td #{moment(payment.ref).format('M/D/YYYY')}
                        td #{moment(payment.createdAt).format('MMMM Do YYYY, h:mm:ss a')}
                        td #{formatCurrency(payment.amount, {format: '%s%v', code: 'USD', symbol: '$'})}

    script(src='/js/Chart.min.js')
    script.
        window.chartColors = {
            red: 'rgb(255, 99, 132)',
            orange: 'rgb(255, 159, 64)',
            yellow: 'rgb(255, 205, 86)',
            green: 'rgb(75, 192, 192)',
            blue: 'rgb(54, 162, 235)',
            purple: 'rgb(153, 102, 255)',
            grey: 'rgb(201, 203, 207)'
        };
        var ctx = document.getElementById("myChart").getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: [#{data.graph.labels}],
                datasets: [
                    {
                        label: 'Payment History',
                        fill: true,
                        data: #{JSON.stringify(data.graph.amounts)},
                        backgroundColor: "rgba(75, 192, 192, 0.5)",
                        borderColor: window.chartColors.green
                    }
                ]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero:true
                        }
                    }]
                }
            }
        });